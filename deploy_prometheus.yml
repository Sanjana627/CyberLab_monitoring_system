---
- name: Install common dependencies on Prometheus VM
  hosts: ansible_machine
  become: yes
  tasks:
    - name: Ensure required packages are installed
      apt:
        name:
          - wget
          - tar
          - curl
          - git
          - golang
        state: present
        update_cache: yes

- name: Install Prometheus on Prometheus VM
  hosts: ansible_machine
  become: yes
  tasks:
    - name: Create /opt/prometheus directory
      file:
        path: /opt/prometheus
        state: directory
        owner: ubuntu
        group: ubuntu
        mode: '0755'

    - name: Download Prometheus
      get_url:
        url: "https://github.com/prometheus/prometheus/releases/download/v2.52.0/prometheus-2.52.0.linux-amd64.tar.gz"
        dest: "/tmp/prometheus.tar.gz"

    - name: Extract Prometheus
      unarchive:
        src: "/tmp/prometheus.tar.gz"
        dest: "/opt/prometheus"
        remote_src: yes
        creates: "/opt/prometheus/prometheus-2.52.0.linux-amd64"

    - name: Move prometheus binary
      copy:
        src: "/opt/prometheus/prometheus-2.52.0.linux-amd64/prometheus"
        dest: "/usr/local/bin/prometheus"
        mode: '0755'

    - name: Move promtool binary
      copy:
        src: "/opt/prometheus/prometheus-2.52.0.linux-amd64/promtool"
        dest: "/usr/local/bin/promtool"
        mode: '0755'

    - name: Create /etc/prometheus directory
      file:
        path: /etc/prometheus
        state: directory
        owner: ubuntu
        group: ubuntu
        mode: '0755'

    - name: Create /var/lib/prometheus directory
      file:
        path: /var/lib/prometheus
        state: directory
        owner: ubuntu
        group: ubuntu
        mode: '0755'

    - name: Deploy Prometheus configuration for Ronin test
      copy:
        dest: /etc/prometheus/prometheus.yml
        content: |
          global:
            scrape_interval: 15s
            evaluation_interval: 15s

          scrape_configs:
            - job_name: 'prometheus'
              static_configs:
                - targets: ['localhost:9090']

            - job_name: 'blackbox_website'
              metrics_path: /probe
              params:
                module: [http_2xx]
              static_configs:
                - targets:
                    - 'https://ronin.uoa.cloud'
                    - 'https://www.google.com'
              relabel_configs:
                - source_labels: [__address__]
                  target_label: __param_target
                - source_labels: [__param_target]
                  target_label: instance
                - target_label: __address__
                  replacement: localhost:9115
      notify:
        - Restart Prometheus

    - name: Create Prometheus systemd service
      copy:
        dest: /etc/systemd/system/prometheus.service
        content: |
          [Unit]
          Description=Prometheus
          Wants=network-online.target
          After=network-online.target

          [Service]
          User=ubuntu
          Group=ubuntu
          Type=simple
          ExecStart=/usr/local/bin/prometheus \
            --config.file=/etc/prometheus/prometheus.yml \
            --storage.tsdb.path=/var/lib/prometheus \
            --web.console.templates=/etc/prometheus/consoles \
            --web.console.libraries=/etc/prometheus/console_libraries
          Restart=always

          [Install]
          WantedBy=multi-user.target
        mode: '0644'

    - name: Reload systemd and start Prometheus
      systemd:
        daemon_reload: yes
        name: prometheus
        enabled: yes
        state: started

  handlers:
    - name: Restart Prometheus
      systemd:
        name: prometheus
        state: restarted

- name: Install Blackbox Exporter on Prometheus VM
  hosts: ansible_machine
  become: yes
  tasks:
    - name: Download Blackbox Exporter
      get_url:
        url: "https://github.com/prometheus/blackbox_exporter/releases/download/v0.25.0/blackbox_exporter-0.25.0.linux-amd64.tar.gz"
        dest: "/tmp/blackbox_exporter.tar.gz"

    - name: Extract Blackbox Exporter
      unarchive:
        src: "/tmp/blackbox_exporter.tar.gz"
        dest: "/opt"
        remote_src: yes

    - name: Move Blackbox Exporter binary
      copy:
        src: "/opt/blackbox_exporter-0.25.0.linux-amd64/blackbox_exporter"
        dest: /usr/local/bin/blackbox_exporter
        mode: '0755'

    - name: Create Blackbox Exporter config directory
      file:
        path: /etc/blackbox_exporter
        state: directory
        mode: '0755'

    - name: Create default blackbox.yml config
      copy:
        dest: /etc/blackbox_exporter/blackbox.yml
        content: |
          modules:
            http_2xx:
              prober: http
              timeout: 5s
              http:
                valid_http_versions: ["HTTP/1.1"]
                method: GET
                follow_redirects: true
                enable_http2: false
                preferred_ip_protocol: ip4

    - name: Create Blackbox Exporter systemd service
      copy:
        dest: /etc/systemd/system/blackbox_exporter.service
        content: |
          [Unit]
          Description=Blackbox Exporter
          Wants=network-online.target
          After=network-online.target

          [Service]
          User=ubuntu
          ExecStart=/usr/local/bin/blackbox_exporter \
            --config.file=/etc/blackbox_exporter/blackbox.yml \
            --web.listen-address=":9115"
          Restart=always

          [Install]
          WantedBy=multi-user.target
        mode: '0644'

    - name: Reload systemd and start Blackbox Exporter
      systemd:
        daemon_reload: yes
        name: blackbox_exporter
        enabled: yes
        state: started

